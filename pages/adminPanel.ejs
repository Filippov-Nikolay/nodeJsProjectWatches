<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- CSS стили -->
    <link rel="stylesheet" href="../css/style.css">

    <title>Admin Panel</title>
</head>

<body>
    <main class="main">
        <section class="section">
            <h1 id="table-name" class="section__title"><%- title %></h1>
            <div class="wrapper-flex">
                <form method="POST">
                    <select name="selectedTable" id="selectedTable">
                        <option value="Admins">Admins</option>
                        <!-- <option value="Basket">Basket</option> -->
                        <option value="Brands">Brands</option>
                        <option value="Gender">Gender</option>
                        <option value="Products" selected>Products</option>
                        <option value="Types" selected>Types</option>
                        <option value="Users">Users</option>
                    </select>
                    <button type="button" onclick="sendSelected()">Done</button>
                </form>
                <form action="/signIn" method="GET">
                    <button type="submit">Sign Out</button>
                </form>
            </div>
            <table class="table" border="1">
                <thead class="thead">
                    <%- thead %>
                </thead>
                <tbody class="tbody">
                    <%- tbody %>
                </tbody>
            </table>
        </section>
    </main>

    <script>
        // Функция для отправки данных на сервер
        function sendDataToServer(updatedData) {
            console.log("Request");
            console.log(updatedData);

            let xhr = new XMLHttpRequest();
            xhr.open('POST', '/edit', true);

            let data = JSON.stringify(updatedData);

            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send(data);
        }

        // Функция для обновления таблицы
        function updateTable(newRowData) {
            // Ищем tbody, куда будем добавлять строку
            let tbody = document.querySelector('.tbody');

            // Создаем новую строку таблицы
            let newRow = document.createElement('tr');

            // Добавляем ячейку с кнопками "edit" и "delete" в начало строки
            let actionCell = document.createElement('td');
            actionCell.innerHTML = `
                <button class="function edit" id="${newRowData.ID}" onclick="editRow(this)">edit</button> 
                <button class="function delete" id="${newRowData.ID}" onclick="deleteRow(this)">delete</button>
            `;
            newRow.appendChild(actionCell);

            // Добавляем ячейку с ID первым
            let idCell = document.createElement('td');
            idCell.textContent = newRowData.ID;
            newRow.appendChild(idCell);

            // Обрабатываем остальные поля
            for (let key in newRowData) {
                // Пропускаем поля "tableName" и "ID"
                if (key !== 'tableName' && key !== 'ID') { 
                    let cell = document.createElement('td');
                    cell.textContent = newRowData[key];
                    newRow.appendChild(cell);
                }
            }

            // Добавляем новую строку в конец таблицы
            tbody.appendChild(newRow);
        }

        // Отправка выбранной таблицы
        function sendSelected() {
            const selectedTable = document.getElementById('selectedTable').value;

            let xhr = new XMLHttpRequest();

            xhr.open('POST', '/adminPanel/update', true);
            xhr.setRequestHeader('Content-Type', 'application/json');

            // Обрабатываем ответ от сервера
            xhr.onreadystatechange = () => {
                const response = JSON.parse(xhr.responseText);

                // Обновляем содержимое таблицы на странице
                document.querySelector('.section__title').innerHTML = response.title;
                document.querySelector('.thead').innerHTML = response.thead;
                document.querySelector('.tbody').innerHTML = response.tbody;
                document.querySelector('.form__inputs').innerHTML = response.inputAdd;
            };

            // Отправляем запрос с выбранной таблицей в теле
            xhr.send(JSON.stringify({ selectedTable: selectedTable }));
        }

        // Функция для отправки данных на добавление
        function addData() {
            let inputData = {};
            let inputs = document.querySelectorAll('.add');

            inputs.forEach(input => {
                let name = input.getAttribute('name').replace('add-', '');
                let value = input.value;

                inputData[name] = value;
            });

            // Добавляем название таблицы в данные
            let tableNameInput = document.querySelector('button[name="tableName"]');
            inputData['tableName'] = tableNameInput.value;

            console.log(inputData);

            let xhr = new XMLHttpRequest();
            xhr.open('POST', '/add', true);

            let data = JSON.stringify(inputData);

            xhr.setRequestHeader('Content-Type', 'application/json');

            // Обрабатываем ответ от сервера
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    // Парсим полученный ответ
                    const newRow = JSON.parse(xhr.responseText);

                    console.log(newRow);

                    // Обновляем таблицу, добавляя новую строку
                    updateTable(newRow);

                    // Очистка полей ввода после успешного добавления
                    inputs.forEach(input => {
                        input.value = ''; // Сбрасываем значение каждого инпута
                    });
                }
            };

            xhr.send(data);
        }


        function editRow(button) {
            var row = button.closest('tr');
            var editButton = row.querySelector('.edit');

            // Превращаем данные в input'ы
            // Выбираем нужные ячейки для редактирования
            var cells = row.querySelectorAll('td:nth-child(n+3):nth-child(-n+10)');

            cells.forEach(function (cell) {
                var input = document.createElement('input');
                input.value = cell.textContent;
                cell.textContent = '';
                cell.appendChild(input);
            });


            // Меняем текст кнопки
            editButton.textContent = 'save';
            editButton.setAttribute('onclick', 'saveRow(this)');


            // Добавляем кнопку отмены
            var cancelButton = document.createElement('button');
            cancelButton.className = 'function cancel';
            cancelButton.textContent = 'cancel';
            cancelButton.onclick = function () { cancelEdit(row); };
            row.querySelector('td').appendChild(cancelButton);
        }

        function saveRow(button) {
            var row = button.closest('tr');
            var inputs = row.querySelectorAll('input');
            let tableName = document.querySelector('.section__title').innerHTML;

            // Сбор данных
            var inputs = row.querySelectorAll('input[data-field]');
            inputs.forEach(function (input) {
                // Получаем имя поля из data-атрибута
                var fieldName = input.getAttribute('data-field');
                updatedData[fieldName] = input.value; 
            });
            updatedData.tableName = tableName; 

            // Отправляем данные на сервер
            sendDataToServer(updatedData);

            // Сохраняем данные из input'ов в ячейки
            inputs.forEach(function (input) {
                var cell = input.closest('td');
                cell.textContent = input.value;
            });

            // Возвращаем текст кнопки "edit"
            var editButton = row.querySelector('.edit');
            editButton.textContent = 'edit';
            editButton.setAttribute('onclick', 'editRow(this)');

            // Убираем кнопку "cancel"
            var cancelButton = row.querySelector('.cancel');
            cancelButton.remove();
        }

        function cancelEdit(row) {
            // Возвращаем исходные значения и убираем input'ы
            var inputs = row.querySelectorAll('input');
            inputs.forEach(function (input) {
                var cell = input.closest('td');
                cell.textContent = input.value;  // Возвращаем исходный текст
            });

            // Меняем кнопку обратно на "edit"
            var editButton = row.querySelector('.edit');
            editButton.textContent = 'edit';
            editButton.setAttribute('onclick', 'editRow(this)');

            // Убираем кнопку "cancel"
            var cancelButton = row.querySelector('.cancel');
            cancelButton.remove();
        }

        function deleteRow(button) {
            // Создаем окно подтверждения
            if (confirm("Вы уверены, что хотите удалить этот элемент?")) {
                var row = button.closest('tr');
                row.remove();  // Удаляем строку, если нажато "Да"

                let tableName = document.querySelector('.section__title').innerHTML; // Получаем имя таблицы

                console.log(row.cells[1].textContent); // Убедитесь, что это правильный ID

                let xhr = new XMLHttpRequest();
                xhr.open('POST', '/del', true);

                let data = JSON.stringify({ ID: row.cells[1].textContent, tableName: tableName }); // Используем имя таблицы

                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.send(data);
            } else {
                console.log("Deletion cancelled.");
            }
        }
    </script>
</body>

</html>